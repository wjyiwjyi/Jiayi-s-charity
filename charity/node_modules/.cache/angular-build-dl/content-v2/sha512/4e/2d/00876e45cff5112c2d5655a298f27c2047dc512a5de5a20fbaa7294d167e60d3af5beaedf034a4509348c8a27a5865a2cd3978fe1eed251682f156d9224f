{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authtoken.service.ts","webpack:///src/app/charity.service.ts","webpack:///src/app/user.service.ts","webpack:///src/app/users/home/home.component.ts","webpack:///src/app/users/home/home.component.html","webpack:///src/app/users/login/login.component.ts","webpack:///src/app/users/login/login.component.html","webpack:///src/app/users/password-equals.directive.ts","webpack:///src/app/users/register/register.component.ts","webpack:///src/app/users/register/register.component.html","webpack:///src/app/users/users-routing.module.ts","webpack:///src/app/users/users.module.ts","webpack:///src/app/users/users/users.component.ts","webpack:///src/app/users/users/users.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthTokenService","token","sessionStorage","removeItem","length","console","log","baseUrl","CharityService","http","get","data","post","put","providedIn","UserService","user","savedUser","name","password","email","responseType","loginUser","observe","err","error","message","status","HomeComponent","event","target","loginPopvoer","open","registPopover","close","showPopver","closePopover","LoginComponent","route","userServ","tokenServ","imgSrc","passtype","notPass","getUser","subscribe","resp","setToken","body","navigate","alert","handleError","onSubmit","toggleText","passwordEquals","control","isEquals","value","RegisterComponent","router","fb","userSer","createForm","repassword","setValidators","required","pass","nativeElement","registForm","group","minLength","pattern","reset","prepareSaveUser","saveUser","formModel","checkValid","revert","usersRoutes","component","children","UsersRoutingModule","forChild","UsersModule","UsersComponent","environment","production","serverUrl","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nconst routes: Routes = [ {\n\tpath: '',\n\tredirectTo: '/visitor',\n\tpathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes), MatSelectModule, MatTabsModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\tconstructor() {}\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<div class=\"bg\">\n  <!-- <div class=\"logout-div\" *ngIf=\"showLogout\">\n    <button type=\"button\" class=\"btn btn-secondary\">Logout</button>\n  </div> -->\n  <div class=\"jumbotron jumbotron-fluid text-center\">\n    <div class=\"container\">\n      <h1 class=\"display-3\">Welcome to Jiayi's Charity</h1>\n    </div>\n  </div>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UsersModule } from './users/users.module';\n//import { CheckInComponent } from './check-in/check-//in.component';\n//import { GoodsListComponent } from './goods-list/goods-list.component';\n//import { CheckOutComponent } from './check-out/check-out.component';\n\nimport { UserService } from './user.service';\nimport { CharityService } from './charity.service';\nimport { AuthTokenService } from './authtoken.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n\t\t/*,\n    CheckInComponent,\n    GoodsListComponent,\n    CheckOutComponent*/\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n\t  FormsModule,\n\t\tMatSelectModule,\n\t\tMatTabsModule,\n\t\tBrowserAnimationsModule,\n\t\tReactiveFormsModule,\n\t\tHttpClientModule,\n\t\tUsersModule,\n\t\tNgbModule,\n\t\tRouterModule.forRoot([])\n  ],\n  providers: [\n\t  AuthTokenService,\n\t\tCharityService,\n\t\tUserService\n\t],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AuthTokenService{\r\n\tsetToken(token:string){\r\n\t\tsessionStorage.removeItem('token');\r\n\t\tif((token as string).length != 0){\r\n\t\t\tsessionStorage.token = token;\r\n\t\t\tconsole.log('sessionStorage.token: ' + sessionStorage.token);\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetToken(){\r\n\t\tif(sessionStorage.token){\r\n\t\t  return sessionStorage.token;\r\n\t\t}else{\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nconst baseUrl = 'http://localhost:8080/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharityService {\n\tconstructor(private http: HttpClient) {\n\t}\n\t/*\n\tprivate async request(method: string, url: string, data?: any) {\n\t\tconst token = await this.oktaAuth.getAccessToken();\n\n\t\tconst result = this.http.request(method, url, {\n\t\t\tbody: data,\n\t\t\tresponseType: 'json',\n\t\t\tobserve: 'body',\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`\n\t\t\t}\n\t\t});\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tresult.subscribe(resolve, reject);\n\t\t});\n\t}\n\t*/\n\tgetGoods() {\n\t\treturn this.http.get(baseUrl);\n\t}\n\t\n\tgetCheckoutGoods() {\n\t\treturn this.http.get(`${baseUrl}/checkout`);\n\t}\n/*\n\tcreateEvent(event) {\n\t\treturn this.request('POST', `${environment.serverUrl}/event`, event);\n\t}\n\n\tupdateEvent(event) {\n\t\treturn this.request('PUT', `${environment.serverUrl}/event/${event.id}`, event);\n\t}\n\n\tdeleteEvent(event) {\n\t\treturn this.request('DELETE', `${environment.serverUrl}/event/${event.id}`);\n\t}  \n  \n  getGoods(): Goods[] {\n\t  return this.goods;\n  }\n\t*/\n\t\n\taddGoods(data) {\n\t\treturn this.http.post(baseUrl, data);\n\t\t/*return this.request('POST', data);\n\t\tnewGoods.id = this.goodsNumber;\n\t\tthis.goods.push(newGoods);\n\t\tthis.idToGoods.set(this.goodsNumber, newGoods);\n\t\tthis.goodsNumber = this.goodsNumber + 1;*/\n\t}\n\t\n\tchangeCheckout(data) {\n\t\treturn this.http.put(`${baseUrl}checkout`, data);\n\t\t/*var g = this.idToGoods.get(id);\n\t\tg.checkout = true;\n\t\t//TODO: check g in goods\n\t\tthis.idToGoods[id] = g;\n\t\tconsole.log(this.goods[0].checkout);*/\n\t}\n\t\n\t\t\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n\r\n\r\nexport interface User{\r\n  id: number,\r\n  name: string,\r\n  password: string,\r\n  email: string\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    constructor(private http: HttpClient) { }\r\n\t\t\r\n    //register\r\n    saveUser(user: User) {\r\n        const savedUser = {\r\n            name: user.name,\r\n            password: user.password,\r\n            email: user.email\r\n        }\r\n        return this.http.post('http://localhost:3000/users/register', savedUser, {\r\n            responseType: \"json\"\r\n        });\r\n\r\n    }\r\n\t\t\r\n    //login\r\n    getUser(user: User) {\r\n        const loginUser = {\r\n            name: user.name,\r\n            password: user.password\r\n        };\r\n        return this.http.post('http://localhost:3000/users/login', loginUser, {\r\n            observe: 'response' \r\n        });\r\n\r\n    }\r\n\r\n    handleError(err: HttpErrorResponse): string {\r\n        if (err.error instanceof Error) {\r\n            return '发生错误，错误信息:' + err.error.message;\r\n        } else {\r\n            console.log(`Backend returned code ${err.status}, body was: ${err.error['msg']}`);\r\n            return err.error['msg'];\r\n        }\r\n    }\r\n}","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { NgbPopover } from '@ng-bootstrap/ng-bootstrap';\n// import { CharityService  } from '../../charity.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit  {\n\n  constructor() {}\n\t\n  ngOnInit(){}\n\t\n  @ViewChild('login') public loginPopvoer: NgbPopover;\n  @ViewChild('regist') public registPopover: NgbPopover;\n\t\n  showPopver(event:any){\n    if(event.target.name === 'login'){\n      this.loginPopvoer.open();\n    }\n    if(event.target.name === 'regist'){\n      this.registPopover.open();\n    }\n    \n  }\n\t\n  closePopover(event:any){\n    if(event.target.name === 'login'){\n      this.loginPopvoer.close();\n    }\n    if(event.target.name === 'regist'){\n      this.registPopover.close();\n    }\n  }\n}"," <p class=\"lead\">\n\t<a class=\"btn btn-primary btn-lg\" name=\"login\" triggers=\"manual\" #login=\"ngbPopover\" placement=\"left\" (mouseenter)=\"showPopver($event)\"\n\t\t(mouseleave)=\"closePopover($event)\" [routerLink]=\"['login']\" ngbPopover=\"Please login first\" role=\"Login\">Login</a>\n\t<a class=\"btn btn-warning btn-lg\" #regist=\"ngbPopover\" placement=\"right\" (mouseenter)=\"showPopver($event)\" (mouseleave)=\"closePopover($event)\"\n\t [routerLink]=\"['regist']\" name=\"regist\" data-toggle=\"tooltip\" ngbPopover=\"Please regist a user\"  role=\"regist\">Regist</a>\n</p>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgModel } from '@angular/forms';\nimport { User, UserService } from '../../user.service';\n//import { User } from '../../user';\nimport { AuthTokenService } from '../../authtoken.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  user : User = { id: 0, name: '', password: '', email: '' };\n  imgSrc = \"/assets/images/eye-off.png\";\n  passtype = 'password';\n  notPass = false;\n  constructor(\n    private route: Router,\n    private userServ: UserService,\n    private tokenServ: AuthTokenService) {}\n\t\t\n  onSubmit() {\n    this.userServ.getUser(this.user).subscribe(\n      (resp) => {\n        //this.userServ.setToken(resp.body['token']);\n        this.tokenServ.setToken(resp.body['token']);\n        this.route.navigate(['/admin']);\n        console.log(resp.body);\n        alert('登录成功！');\n      },\n      (err)=>\n      alert(this.userServ.handleError(err)),\n      () => console.log('The Post observable is now completed. ')\n    )\n  }\n\n  toggleText(){\n    /* this.imgSrc = (this.imgSrc === '/assets/images/eye_open.png'? \n    '/assets/images/eye-off.png' : '/assets/images/eye_open.png'); */\n    if(!this.notPass){\n      this.imgSrc = '/assets/images/eye-off.png';\n      this.passtype = 'password';\n      this.notPass = true;\n    }else{\n      this.imgSrc = '/assets/images/eye_open.png';\n      this.passtype = 'text';\n      this.notPass = false;\n    }\n  }\n}","<div class=\"div-login\">\n  <form (ngSubmit)=\"onSubmit()\" #loginForm=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"name\">User name</label>\n      <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\" placeholder=\"Enter user name\" [(ngModel)]=\"user.name\" required\n        #name=\"ngModel\">\n      <div *ngIf=\"name.invalid && (name.dirty || name.touched)\"   class=\"alert alert-danger\">\n          User name is required!\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <div class=\"input-group\">\n        <input [attr.type]=\"passtype\" class=\"form-control\" id=\"password\" name=\"passwrod\" placeholder=\"Enter password\" [(ngModel)]=\"user.password\"\n        required #password=\"ngModel\">\n        <img src=\"{{imgSrc}}\" alt=\"eye_off.png\" (click)=\"toggleText()\">\n      </div>\n      <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger\">\n          Password is required!\n      </div>\n    </div>\n    <div class=\"form-group form-btn\">\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!loginForm.form.valid\">Submit</button>\n      <button type=\"button\" class=\"btn btn-light\" (click)=\"loginForm.reset()\">Cancel</button>\n    </div>\n  </form>\n</div>","import { Directive, Input } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn, Validators } from '@angular/forms';\r\n\r\n//判断密码和重复密码输入是否相等,如果相等返回null，如果不相等返回control.value\r\nexport function passwordEquals(password: string): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n        const isEquals = (password === control.value);\r\n        return isEquals ? null : { 'comparePassword': control.value };\r\n    }\r\n}\r\n\r\n","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { User, UserService } from '../../user.service';\nimport { passwordEquals } from '../password-equals.directive';\nimport { AuthTokenService } from '../../authtoken.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  @ViewChild('pass') pass: ElementRef;\n  user : User = { id: 0, name: '', password: '', email: '' };\n  registForm: FormGroup;\n  passwordValue: string;\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private userSer: UserService,\n    private tokenServ: AuthTokenService) {\n    this.createForm();\n  }\n  checkValid() {\n    //对repassword设置验证规则\n    this.repassword.setValidators([Validators.required, passwordEquals(this.pass.nativeElement.value)]);\n  }\n\n  //利用FromBulider创建表单\n  createForm() {\n    this.registForm = this.fb.group({\n      'name': [this.user.name, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.pattern(/^[a-z]|[A-Z]|[0-9]$/)]],\n      'password': [this.user.password,\n      [Validators.required,\n      Validators.minLength(8),\n      Validators.pattern(/^[A-Z][a-zA-Z0-9_-]+$/)]],\n      'email': [this.user.email,\n      Validators.pattern(/^([a-zA-Z0-9_\\.\\-]+)@([a-zA-Z0-9_\\.\\-]+)\\.([a-zA-Z]{2,4})$/)],\n      'repassword': [this.user.password, [\n        Validators.required]]\n    });\n  }\n\n  //进行验证必须写get,通过它所属的控件组（FormGroup）的get方法来访问表单控件\n  get name() { return this.registForm.get('name'); }\n  get password() { return this.registForm.get('password'); }\n  get email() { return this.registForm.get('email'); }\n  get repassword() { return this.registForm.get('repassword'); }\n  //重置from\n  revert() {\n    this.reset();\n  }\n  //提交数据\n  onSubmit() {\n    this.user = this.prepareSaveUser();\n    this.userSer.saveUser(this.user).subscribe(\n      (value) => {\n        console.log(value);\n        //this.userSer.setToken(value['token']);\n        this.tokenServ.setToken(value['token']);\n        this.router.navigate(['/birthday']);\n        alert('注册成功！');\n      },\n      (err) =>\n        alert(this.userSer.handleError(err)),\n      () => {\n        console.log('The post observable is now completed.');\n      }\n    );\n    // alert(`${this.user.id} :  ${this.user.name} : ${this.user.email}`);\n\n  }\n  //保存注册用户数据\n  prepareSaveUser(): User {\n    const formModel = this.registForm.value;\n    const saveUser: User = {\n      id: this.user.id,\n      name: formModel.name as string,\n      password: formModel.password as string,\n      email: formModel.email\n    };\n    return saveUser;\n  }\n  //刷新Form\n  reset() {\n    this.user =  { id: 0, name: '', password: '', email: '' };\n    this.registForm.reset({\n      name: this.user.name,               //the FormControl called 'name'\n      password: this.user.password,\n      email: this.user.email\n    })\n  }\n\n}","<form [formGroup]=\"registForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"name\">User name</label>\n      <input class=\"form-control\" formControlName=\"name\" id=\"name\" required>\n      <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"name.errors.required\">\n          Name is required!\n        </div>\n        <div *ngIf=\"name.errors.minlength\">\n          Name must be at least 4 characters long.\n        </div>\n        <div *ngIf=\"name.errors.pattern\">\n          Name must be composed of letters, numbers\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input class=\"form-control\" formControlName=\"password\" type=\"password\" required id=\"password\" #pass>\n      <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"password.errors.required\">\n          Password is required!\n        </div>\n        <div *ngIf=\"password.errors.minlength\">\n          Password must be at least 8 characters long.\n        </div>\n        <div *ngIf=\"password.errors.pattern\">\n          <!--密码必须由字母、数字、下划线和减号组成，首字母要求大写 -->\n          Password must be composed of letters, numbers, '_', '-' and Capital letters must be capitalized.\n        </div>\n      </div>\n    </div>\n    <div class=\"from-group\">\n      <label for=\"repassword\">Re Password</label>\n      <input type=\"password\" class=\"form-control\" required id=\"repassword\" (focus)=\"checkValid()\"\n       formControlName=\"repassword\">\n      <div class=\"alert alert-danger\" *ngIf=\"repassword.invalid && (repassword.dirty || repassword.touched)\">\n        <div *ngIf=\"repassword.errors.required\">\n          Re password is required!\n        </div>\n        <div *ngIf=\"repassword.errors.comparePassword\">\n          Re password must equal password!\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group email-group\">\n      <label for=\"email\">Email</label>\n      <input class=\"form-control\" formControlName=\"email\" type=\"email\" id=\"email\">\n      <div *ngIf=\"email.invalid &&(email.dirty || email.touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"email.errors.pattern\">\n          The email address format is incorrect\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group form-btn\">\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"registForm.invalid\">Submit</button>\n      <button type=\"button\" class=\"btn btn-light\" [disabled]=\"registForm.pristine\" (click)=\"revert()\">Cancel</button>\n    </div>\n  </form>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nconst usersRoutes: Routes = [\r\n\t{\r\n\t\tpath:'visitor',\r\n\t\tcomponent: UsersComponent,\r\n\t\tchildren:[\r\n\t\t\t{path:'', component: HomeComponent},\r\n\t\t\t{path: 'login', component: LoginComponent},\r\n\t\t\t{path:'regist', component: RegisterComponent}\r\n\t\t]\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports:[\r\n\t\tRouterModule.forChild(usersRoutes)\r\n\t],\r\n\texports:[\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class UsersRoutingModule{}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nimport { UsersRoutingModule } from './users-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    UsersRoutingModule,\r\n    NgbModule,\r\n\t\tRouterModule.forRoot([])\r\n  ],\r\n  declarations: [\r\n    UsersComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    RegisterComponent\r\n\t]\r\n})\r\nexport class UsersModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent {\n\n  constructor() { }\n\n}\n","<router-outlet></router-outlet>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\tserverUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}