{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth-interceptor.ts","webpack:///src/app/authguard.service.ts","webpack:///src/app/authtoken.service.ts","webpack:///src/app/charity.service.ts","webpack:///src/app/goods/check-in/check-in.component.ts","webpack:///src/app/goods/check-in/check-in.component.html","webpack:///src/app/goods/check-out/check-out.component.ts","webpack:///src/app/goods/check-out/check-out.component.html","webpack:///src/app/goods/goods-routing.module.ts","webpack:///src/app/goods/goods.module.ts","webpack:///src/app/goods/goods/goods.component.ts","webpack:///src/app/goods/goods/goods.component.html","webpack:///src/app/user.service.ts","webpack:///src/app/users/home/home.component.ts","webpack:///src/app/users/home/home.component.html","webpack:///src/app/users/login/login.component.ts","webpack:///src/app/users/login/login.component.html","webpack:///src/app/users/password-equals.directive.ts","webpack:///src/app/users/register/register.component.ts","webpack:///src/app/users/register/register.component.html","webpack:///src/app/users/users-routing.module.ts","webpack:///src/app/users/users.module.ts","webpack:///src/app/users/users/users.component.ts","webpack:///src/app/users/users/users.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthInterceptor","tokenServ","next","auth","getToken","console","log","authReq","clone","headers","set","handle","AuthGuardService","tokenServe","router","route","state","url","navigate","AuthTokenService","token","sessionStorage","removeItem","length","CharityService","userServ","http","get","observe","goods","body","post","uid","err","error","message","status","CheckInComponent","charityService","newGoodsEvent","kind","quantity","amount","targetLocation","donor","storeLocation","checkOut","addGoods","subscribe","response","name","CheckOutComponent","selectedId","getCheckoutGoods","changeCheckout","resp","res","i","g","push","handleError","goodsRoutes","component","canActivate","children","GoodsRoutingModule","forChild","GoodsModule","provide","useClass","multi","GoodsComponent","setToken","logout","UserService","user","savedUser","password","email","responseType","loginUser","HomeComponent","event","target","loginPopvoer","open","registPopover","close","showPopver","closePopover","LoginComponent","imgSrc","passtype","notPass","getUser","alert","onSubmit","toggleText","passwordEquals","control","isEquals","value","RegisterComponent","fb","userSer","createForm","repassword","setValidators","required","pass","nativeElement","registForm","group","minLength","pattern","reset","prepareSaveUser","saveUser","formModel","checkValid","revert","usersRoutes","UsersRoutingModule","UsersModule","UsersComponent","environment","production","serverUrl","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nconst routes: Routes = [ {\n\tpath: '',\n\tredirectTo: '/visitor',\n\tpathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes), MatSelectModule, MatTabsModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\tconstructor() {}\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<div class=\"bg\">\n  <!-- <div class=\"logout-div\" *ngIf=\"showLogout\">\n    <button type=\"button\" class=\"btn btn-secondary\">Logout</button>\n  </div> -->\n  <div class=\"jumbotron jumbotron-fluid text-center\">\n    <div class=\"container\">\n      <h1 class=\"display-3\">Welcome to Jiayi's Charity</h1>\n    </div>\n  </div>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UsersModule } from './users/users.module';\nimport { GoodsModule } from './goods/goods.module';\n\nimport { UserService } from './user.service';\nimport { CharityService } from './charity.service';\nimport { AuthTokenService } from './authtoken.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n\t  FormsModule,\n\t\tBrowserAnimationsModule,\n\t\tReactiveFormsModule,\n\t\tHttpClientModule,\n\t\tUsersModule,\n\t\tGoodsModule,\n\t\tNgbModule,\n\t\tRouterModule.forRoot([])\n  ],\n  providers: [\n\t  AuthTokenService,\n\t\tCharityService,\n\t\tUserService\n\t],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/observable';\r\nimport { AuthTokenService } from './authtoken.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n    constructor(\r\n        private tokenServ: AuthTokenService\r\n    ){}\r\n    intercept(req: HttpRequest<any>,next: HttpHandler) : Observable<HttpEvent<any>>{\r\n        //获取认证信息\r\n         const auth = this.tokenServ.getToken();\r\n        //const auth = '1231321323';\r\n        console.log('auth: ' + auth);\r\n        //克隆request,加入新的头信息\r\n        const authReq = req.clone({headers:req.headers.set('Authorization', 'Bearer ' + auth)});\r\n        return next.handle(authReq);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport {\r\n\tCanActivate,\r\n\tActivatedRouteSnapshot,\r\n\tRouterStateSnapshot,\r\n\tRouter\r\n} from '@angular/router';\r\nimport { UserService } from './user.service';\r\nimport { AuthTokenService } from './authtoken.service';\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n\tconstructor(\r\n\t\tprivate tokenServe: AuthTokenService,\r\n\t\tprivate router: Router) { }\r\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n\t\tlet url = state.url;\r\n\t\tif (this.tokenServe.getToken() !== null) {\r\n\t\t\tconsole.log('router success!');\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tthis.router.navigate(['/login']);\r\n\t\treturn false;\r\n\t}\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AuthTokenService{\r\n\tsetToken(token:string){\r\n\t\tsessionStorage.removeItem('token');\r\n\t\tif((token as string).length != 0){\r\n\t\t\tsessionStorage.token = token;\r\n\t\t\tconsole.log('sessionStorage.token: ' + sessionStorage.token);\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetToken(){\r\n\t\tif(sessionStorage.token){\r\n\t\t  return sessionStorage.token;\r\n\t\t}else{\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { UserService } from './user.service';\nimport { Observable } from 'rxjs/observable';\n\nexport interface Goods {\n  id: number,\n\tkind: string,\n\tquantity: number,\n\tamount: number,\n\ttargetLocation: string,\n\tdonor: string,\n\tstoreLocation: string,\n\tcheckOut: boolean\n}\n\n@Injectable()\nexport class CharityService {\n\t\n\tconstructor(\n    private userServ: UserService,\n    private http: HttpClient\n\t) {}\n\t\n\tgetGoods() {\n\t\treturn this.http.get('http://localhost:3000/goods/goods-list',\n\t\t{\n\t\t\tobserve: 'response',\n\t\t\t//在头部加上JWT验证信息\n\t\t\t//headers: new HttpHeaders().set('Authorization', 'Bearer ' + this.userServ.getToken())\n\t\t});\n\t}\n\t\n\tgetCheckoutGoods() {\n\t\treturn this.http.get('http://localhost:3000/goods/checkout-goods',\n\t\t{\n\t\t\tobserve: 'response',\n\t\t\t//在头部加上JWT验证信息\n\t\t\t//headers: new HttpHeaders().set('Authorization', 'Bearer ' + this.userServ.getToken())\n\t\t});\n\t}\n\n\t\n\taddGoods(goods: Goods) {\n\t\tconst body = {'value': goods};\n\t\treturn this.http.post('http://localhost:3000/goods/checkin', body);\n\t}\n\t\n\tchangeCheckout(uid: number) {\n\t\treturn this.http.post('http://localhost:3000/goods/checkout', {'value': uid});\n\t}\n\t\n\thandleError(err: HttpErrorResponse): string {\n\t\tif (err.error instanceof Error) {\n\t\t\treturn '发生错误，错误信息:' + err.error.message;\n\t\t} else {\n\t\t\tconsole.log(`Backend returned code ${err.status}, body was: ${err.error['msg']}`);\n\t\t\treturn err.error['msg'];\n\t\t}\n\t}\n\t\n}\n","import { Component, Output, EventEmitter } from '@angular/core';\nimport { CharityService, Goods } from '../../charity.service';\n\n@Component({\n  selector: 'app-check-in',\n  templateUrl: './check-in.component.html',\n  styleUrls: ['./check-in.component.css']\n})\nexport class CheckInComponent{\n\t\n  @Output() newGoodsEvent = new EventEmitter<Goods>();\n\n  goods: Goods = {\n\t\tid: 0,\n\t\tkind: '',\n\t\tquantity: 0,\n\t\tamount: 0,\n\t\ttargetLocation: '',\n\t\tdonor: '',\n\t\tstoreLocation: '',\n\t\tcheckOut: false\n\t};\n  \n  constructor(private charityService: CharityService) {}\n\n  addGoods() {\n\t\tthis.charityService.addGoods(this.goods)\n\t\t\t.subscribe(\n\t\t\t  response => {\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n  }\n}\n","<h2>Detail</h2>\n<div>\n  <label>kind:\n    <input [(ngModel)]=\"goods.kind\" placeholder=\"kind\"/>\n  </label>\n  <label>quantity:\n\t\t<input [(ngModel)]=\"goods.quantity\" placeholder=\"quantity\"/>\n\t</label>\n  <label>amount:\n\t\t<input [(ngModel)]=\"goods.amount\" placeholder=\"amount\"/>\n\t</label>\n\t<label>target_location:\n\t\t<input [(ngModel)]=\"goods.targetLocation\" placeholder=\"targetLocation\"/>\n\t</label>\n\t<label>donor:\n\t\t<input [(ngModel)]=\"goods.donor\" placeholder=\"donor_name\"/>\n\t</label>\n\t<label>store_location:\n\t\t<input [(ngModel)]=\"goods.storeLocation\" placeholder=\"storeLocation\"/>\n\t</label>\n</div>\n<button (click)=\"addGoods()\">Confirm</button>\n","import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { CharityService, Goods } from '../../charity.service';\n\n@Component({\n  selector: 'app-check-out',\n  templateUrl: './check-out.component.html',\n  styleUrls: ['./check-out.component.css']\n})\nexport class CheckOutComponent implements OnInit {\n\tselectedId = 0;\n\tgoods: Goods[];\n\t\n  constructor(private charityService: CharityService) {}\n\t\n\tngOnInit() {\n\t\tthis.getCheckoutGoods();\n\t}\n\t\n\tchangeCheckout(selectedId: number) {\n\t\tthis.charityService.changeCheckout(selectedId)\n\t\t\t.subscribe(\n\t\t\t  response => {\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\t\n\t}\n\t\n\tgetCheckoutGoods() {\n\t\tthis.charityService.getCheckoutGoods()\n\t\t\t.subscribe(\n\t\t\t\tresp => {\n\t\t\t\t\tif(resp.body['code'] === '200'){\n\t\t\t\t\t\tlet res = resp.body['results'];\n\t\t\t\t\t\tfor(let i = 0; i < res.length; i++){\n\t\t\t\t\t\t  let g: Goods = {\n\t\t\t\t\t\t\t\tid: res[i]['id'],\n\t\t\t\t\t\t\t\tkind: res[i]['kind'],\n\t\t\t\t\t\t\t\tquantity: res[i]['quantity'],\n\t\t\t\t\t\t\t\tamount: res[i]['amount'],\n\t\t\t\t\t\t\t\ttargetLocation: res[i]['target-location'],\n\t\t\t\t\t\t\t\tdonor: res[i]['donor'],\n\t\t\t\t\t\t\t\tstoreLocation: res[i]['store-location'],\n\t\t\t\t\t\t\t\tcheckOut: res[i]['check-out']\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis.goods.push(g);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t(err)=>{\n\t\t\t\t\tthis.charityService.handleError(err);\n\t\t\t\t},\n\t\t\t\t()=>console.log('The Post observable is now completed.')\n\t\t\t)\n\t}\n}\n","<h2>Check out</h2>\n<mat-form-field>\n\t<mat-label>Please select goods.</mat-label>\n\t<mat-select [(value)]=\"selectedId\">\n\t  <mat-option *ngFor=\"let g of goods\" [value]=\"g.id\">\n\t\t  name: {{g.name}}; quantity: {{g.quantity}};\n\t\t</mat-option>\n\t</mat-select>\n</mat-form-field>\n<button (click)=\"changeCheckout(selectedId)\">Confirm</button>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GoodsComponent } from './goods/goods.component';\r\nimport { CheckInComponent } from './check-in/check-in.component';\r\nimport { CheckOutComponent } from './check-out/check-out.component';\r\nimport { AuthGuardService } from '../authguard.service';\r\n\r\nconst goodsRoutes: Routes = [\r\n\t{\r\n\t\tpath: 'admin',\r\n\t\tcomponent: GoodsComponent,\r\n\t\tcanActivate: [AuthGuardService],\r\n\t\tchildren: [\r\n\t\t\t{ path: '', component: GoodsComponent },\r\n\t\t\t{\r\n\t\t\t\tpath: ':check-in',\r\n\t\t\t\tcomponent: CheckInComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: ':check-out',\r\n\t\t\t\tcomponent: CheckOutComponent\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(goodsRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class GoodsRoutingModule {\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { GoodsRoutingModule } from './goods-routing.module';\r\nimport { CharityService } from '../charity.service';\r\nimport { AuthGuardService } from '../authguard.service';\r\nimport { AuthInterceptor } from '../auth-interceptor';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { GoodsComponent } from './goods/goods.component';\r\nimport { CheckInComponent } from './check-in/check-in.component';\r\nimport { CheckOutComponent } from './check-out/check-out.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    GoodsRoutingModule,\r\n    NgbModule,\r\n\t\tMatSelectModule,\r\n\t\tMatTabsModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule\r\n  ],\r\n  providers:[\r\n    CharityService,\r\n    AuthGuardService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi:true\r\n    }\r\n  ],\r\n  declarations: [GoodsComponent, CheckInComponent, CheckOutComponent]\r\n})\r\nexport class GoodsModule { }","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthTokenService } from '../../authtoken.service';\n\n@Component({\n  selector: 'app-goods',\n  templateUrl: './goods.component.html',\n  styleUrls: ['./goods.component.css']\n})\nexport class GoodsComponent {\n\n  constructor(\n    private tokenServ: AuthTokenService,\n    private router: Router) { }\n\t\n  logout() {\n    this.tokenServ.setToken(null);\n    this.router.navigate(['/']);\n  }\n\n}","<button type=\"button\" class=\"btn btn-secondary logout\" (click)=\"logout()\">\n  Logout</button>\n<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n\r\nexport interface User{\r\n  id: number,\r\n  name: string,\r\n  password: string,\r\n  email: string\r\n}\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    constructor(private http: HttpClient) { }\r\n\t\t\r\n    //register\r\n    saveUser(user: User) {\r\n        const savedUser = {\r\n            name: user.name,\r\n            password: user.password,\r\n            email: user.email\r\n        }\r\n        return this.http.post('http://localhost:3000/users/register', savedUser, {\r\n            responseType: \"json\"\r\n        });\r\n\r\n    }\r\n\t\t\r\n    //login\r\n    getUser(user: User) {\r\n        const loginUser = {\r\n            name: user.name,\r\n            password: user.password\r\n        };\r\n        return this.http.post('http://localhost:3000/users/login', loginUser, {\r\n            observe: 'response' \r\n        });\r\n\r\n    }\r\n\r\n    handleError(err: HttpErrorResponse): string {\r\n        if (err.error instanceof Error) {\r\n            return '发生错误，错误信息:' + err.error.message;\r\n        } else {\r\n            console.log(`Backend returned code ${err.status}, body was: ${err.error['msg']}`);\r\n            return err.error['msg'];\r\n        }\r\n    }\r\n}","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { NgbPopover } from '@ng-bootstrap/ng-bootstrap';\n// import { CharityService  } from '../../charity.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit  {\n\n  constructor() {}\n\t\n  ngOnInit(){}\n\t\n  @ViewChild('login') public loginPopvoer: NgbPopover;\n  @ViewChild('regist') public registPopover: NgbPopover;\n\t\n  showPopver(event:any){\n    if(event.target.name === 'login'){\n      this.loginPopvoer.open();\n    }\n    if(event.target.name === 'regist'){\n      this.registPopover.open();\n    }\n    \n  }\n\t\n  closePopover(event:any){\n    if(event.target.name === 'login'){\n      this.loginPopvoer.close();\n    }\n    if(event.target.name === 'regist'){\n      this.registPopover.close();\n    }\n  }\n}"," <p class=\"lead\">\n\t<a class=\"btn btn-primary btn-lg\" name=\"login\" triggers=\"manual\" #login=\"ngbPopover\" placement=\"left\" (mouseenter)=\"showPopver($event)\"\n\t\t(mouseleave)=\"closePopover($event)\" [routerLink]=\"['login']\" ngbPopover=\"Please login first\" role=\"Login\">Login</a>\n\t<a class=\"btn btn-warning btn-lg\" #regist=\"ngbPopover\" placement=\"right\" (mouseenter)=\"showPopver($event)\" (mouseleave)=\"closePopover($event)\"\n\t [routerLink]=\"['regist']\" name=\"regist\" data-toggle=\"tooltip\" ngbPopover=\"Please regist a user\"  role=\"regist\">Regist</a>\n</p>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgModel } from '@angular/forms';\nimport { User, UserService } from '../../user.service';\nimport { AuthTokenService } from '../../authtoken.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  user : User = { id: 0, name: '', password: '', email: '' };\n  imgSrc = \"/assets/images/eye-off.png\";\n  passtype = 'password';\n  notPass = false;\n  constructor(\n    private route: Router,\n    private userServ: UserService,\n    private tokenServ: AuthTokenService) {}\n\t\t\n  onSubmit() {\n    this.userServ.getUser(this.user).subscribe(\n      (resp) => {\n        //this.userServ.setToken(resp.body['token']);\n        this.tokenServ.setToken(resp.body['token']);\n        this.route.navigate(['/admin']);\n        console.log(resp.body);\n        alert('登录成功！');\n      },\n      (err)=>\n      alert(this.userServ.handleError(err)),\n      () => console.log('The Post observable is now completed. ')\n    )\n  }\n\n  toggleText(){\n    /* this.imgSrc = (this.imgSrc === '/assets/images/eye_open.png'? \n    '/assets/images/eye-off.png' : '/assets/images/eye_open.png'); */\n    if(!this.notPass){\n      this.imgSrc = '/assets/images/eye-off.png';\n      this.passtype = 'password';\n      this.notPass = true;\n    }else{\n      this.imgSrc = '/assets/images/eye_open.png';\n      this.passtype = 'text';\n      this.notPass = false;\n    }\n  }\n}","<div class=\"div-login\">\n  <form (ngSubmit)=\"onSubmit()\" #loginForm=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"name\">User name</label>\n      <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\" placeholder=\"Enter user name\" [(ngModel)]=\"user.name\" required\n        #name=\"ngModel\">\n      <div *ngIf=\"name.invalid && (name.dirty || name.touched)\"   class=\"alert alert-danger\">\n          User name is required!\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <div class=\"input-group\">\n        <input [attr.type]=\"passtype\" class=\"form-control\" id=\"password\" name=\"passwrod\" placeholder=\"Enter password\" [(ngModel)]=\"user.password\"\n        required #password=\"ngModel\">\n        <img src=\"{{imgSrc}}\" alt=\"eye_off.png\" (click)=\"toggleText()\">\n      </div>\n      <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger\">\n          Password is required!\n      </div>\n    </div>\n    <div class=\"form-group form-btn\">\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!loginForm.form.valid\">Submit</button>\n      <button type=\"button\" class=\"btn btn-light\" (click)=\"loginForm.reset()\">Cancel</button>\n    </div>\n  </form>\n</div>","import { Directive, Input } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn, Validators } from '@angular/forms';\r\n\r\n//判断密码和重复密码输入是否相等,如果相等返回null，如果不相等返回control.value\r\nexport function passwordEquals(password: string): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n        const isEquals = (password === control.value);\r\n        return isEquals ? null : { 'comparePassword': control.value };\r\n    }\r\n}\r\n\r\n","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { User, UserService } from '../../user.service';\nimport { passwordEquals } from '../password-equals.directive';\nimport { AuthTokenService } from '../../authtoken.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  @ViewChild('pass') pass: ElementRef;\n  user : User = { id: 0, name: '', password: '', email: '' };\n  registForm: FormGroup;\n  passwordValue: string;\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private userSer: UserService,\n    private tokenServ: AuthTokenService) {\n    this.createForm();\n  }\n  checkValid() {\n    //对repassword设置验证规则\n    this.repassword.setValidators([Validators.required, passwordEquals(this.pass.nativeElement.value)]);\n  }\n\n  //利用FromBulider创建表单\n  createForm() {\n    this.registForm = this.fb.group({\n      'name': [this.user.name, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.pattern(/^[a-z]|[A-Z]|[0-9]$/)]],\n      'password': [this.user.password,\n      [Validators.required,\n      Validators.minLength(8),\n      Validators.pattern(/^[A-Z][a-zA-Z0-9_-]+$/)]],\n      'email': [this.user.email,\n      Validators.pattern(/^([a-zA-Z0-9_\\.\\-]+)@([a-zA-Z0-9_\\.\\-]+)\\.([a-zA-Z]{2,4})$/)],\n      'repassword': [this.user.password, [\n        Validators.required]]\n    });\n  }\n\n  //进行验证必须写get,通过它所属的控件组（FormGroup）的get方法来访问表单控件\n  get name() { return this.registForm.get('name'); }\n  get password() { return this.registForm.get('password'); }\n  get email() { return this.registForm.get('email'); }\n  get repassword() { return this.registForm.get('repassword'); }\n  //重置from\n  revert() {\n    this.reset();\n  }\n  //提交数据\n  onSubmit() {\n    this.user = this.prepareSaveUser();\n    this.userSer.saveUser(this.user).subscribe(\n      (value) => {\n        console.log(value);\n        //this.userSer.setToken(value['token']);\n        this.tokenServ.setToken(value['token']);\n        this.router.navigate(['/birthday']);\n        alert('注册成功！');\n      },\n      (err) =>\n        alert(this.userSer.handleError(err)),\n      () => {\n        console.log('The post observable is now completed.');\n      }\n    );\n    // alert(`${this.user.id} :  ${this.user.name} : ${this.user.email}`);\n\n  }\n  //保存注册用户数据\n  prepareSaveUser(): User {\n    const formModel = this.registForm.value;\n    const saveUser: User = {\n      id: this.user.id,\n      name: formModel.name as string,\n      password: formModel.password as string,\n      email: formModel.email\n    };\n    return saveUser;\n  }\n  //刷新Form\n  reset() {\n    this.user =  { id: 0, name: '', password: '', email: '' };\n    this.registForm.reset({\n      name: this.user.name,               //the FormControl called 'name'\n      password: this.user.password,\n      email: this.user.email\n    })\n  }\n\n}","<form [formGroup]=\"registForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"name\">User name</label>\n      <input class=\"form-control\" formControlName=\"name\" id=\"name\" required>\n      <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"name.errors.required\">\n          Name is required!\n        </div>\n        <div *ngIf=\"name.errors.minlength\">\n          Name must be at least 4 characters long.\n        </div>\n        <div *ngIf=\"name.errors.pattern\">\n          Name must be composed of letters, numbers\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input class=\"form-control\" formControlName=\"password\" type=\"password\" required id=\"password\" #pass>\n      <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"password.errors.required\">\n          Password is required!\n        </div>\n        <div *ngIf=\"password.errors.minlength\">\n          Password must be at least 8 characters long.\n        </div>\n        <div *ngIf=\"password.errors.pattern\">\n          <!--密码必须由字母、数字、下划线和减号组成，首字母要求大写 -->\n          Password must be composed of letters, numbers, '_', '-' and Capital letters must be capitalized.\n        </div>\n      </div>\n    </div>\n    <div class=\"from-group\">\n      <label for=\"repassword\">Re Password</label>\n      <input type=\"password\" class=\"form-control\" required id=\"repassword\" (focus)=\"checkValid()\"\n       formControlName=\"repassword\">\n      <div class=\"alert alert-danger\" *ngIf=\"repassword.invalid && (repassword.dirty || repassword.touched)\">\n        <div *ngIf=\"repassword.errors.required\">\n          Re password is required!\n        </div>\n        <div *ngIf=\"repassword.errors.comparePassword\">\n          Re password must equal password!\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group email-group\">\n      <label for=\"email\">Email</label>\n      <input class=\"form-control\" formControlName=\"email\" type=\"email\" id=\"email\">\n      <div *ngIf=\"email.invalid &&(email.dirty || email.touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"email.errors.pattern\">\n          The email address format is incorrect\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group form-btn\">\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"registForm.invalid\">Submit</button>\n      <button type=\"button\" class=\"btn btn-light\" [disabled]=\"registForm.pristine\" (click)=\"revert()\">Cancel</button>\n    </div>\n  </form>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nconst usersRoutes: Routes = [\r\n\t{\r\n\t\tpath:'visitor',\r\n\t\tcomponent: UsersComponent,\r\n\t\tchildren:[\r\n\t\t\t{path:'', component: HomeComponent},\r\n\t\t\t{path: 'login', component: LoginComponent},\r\n\t\t\t{path:'regist', component: RegisterComponent}\r\n\t\t]\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports:[\r\n\t\tRouterModule.forChild(usersRoutes)\r\n\t],\r\n\texports:[\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class UsersRoutingModule{}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nimport { UsersRoutingModule } from './users-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    UsersRoutingModule,\r\n    NgbModule,\r\n\t\tRouterModule.forRoot([])\r\n  ],\r\n  declarations: [\r\n    UsersComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    RegisterComponent\r\n\t]\r\n})\r\nexport class UsersModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent {\n\n  constructor() { }\n\n}\n","<router-outlet></router-outlet>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\tserverUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}